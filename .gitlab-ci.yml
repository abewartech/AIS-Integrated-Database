# Docker Build and Test pipeline.
# Insipiration from: https://blog.lwolf.org/post/how-to-build-and-test-docker-images-in-gitlab-ci/

stages:
  - build
  - test
  # - deploy

default:
  image: docker:latest
  services:
    - docker:dind

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.
 
docker-main-build:
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      tag=""
      echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"

  # Run this job when in Main/Master and if a dockerfile exists.
  rules:
    - if: $CI_COMMIT_BRANCH  && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      exists:
        - Dockerfile
 
docker-staging-build:
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      tag=":$CI_COMMIT_REF_SLUG"
      echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}"  --file ./Dockerfile-staging .
    - docker push "$CI_REGISTRY_IMAGE${tag}"

  # Run this job when in Staging and if a dockerfile exists.
  rules:
    - if: $CI_COMMIT_BRANCH  && $CI_COMMIT_BRANCH == "staging"
      exists:
        - Dockerfile-staging

docker-testing:
  stage: test
  script:
    - docker run -d --env-file=./config/sample.env $CI_REGISTRY_IMAGE${tag}
  rules:
    # Only do tests if in master or staging.
    - if: $CI_COMMIT_BRANCH  && $CI_COMMIT_BRANCH == "staging"
      exists:
        - Dockerfile-dev
    - if: $CI_COMMIT_BRANCH  && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      exists:
        - Dockerfile

